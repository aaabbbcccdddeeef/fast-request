import{_ as p}from"./refreshProjectConfig-07f78e25.js";import{_ as g,a as h}from"./transferData-5dd49379.js";import{_ as u,X as b,Y as m,Z as a,a0 as e,$ as s,a1 as n,a2 as _,B as t}from"./framework-e053119e.js";const f="/fast-request/img/2023.1.3/teamDirectory.png",k={},v=a("h2",{id:"购买优惠",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#购买优惠","aria-hidden":"true"},"#"),e(" 购买优惠")],-1),A=a("p",null,[a("strong",null,"团队人数>=6"),e("，可联系作者，酌情打折以及企业主页展示，欢迎合作。同时也欢迎各位开发者在团队中推荐Restful Fast Request，谢谢!")],-1),x=a("p",null,[e("企业展示页案例如下，需要提供："),a("strong",null,"名称、口号、官网链接、logo、首页预览图")],-1),P=_('<h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2><p>基于版本控制系统，共享<strong>部分配置</strong>以及<strong>API数据</strong>。</p><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h2><p><span class="badge" style="vertical-align:middle;background:#21D789;">零部署</span><br><span class="badge" style="vertical-align:middle;background:#087CFA;">私有化</span><br><span class="badge" style="vertical-align:middle;background:#FE2857;">不限人数</span><br><span class="badge" style="vertical-align:middle;background:#FC801D;">不限API数</span><br><span class="badge" style="vertical-align:middle;background:#6B57FF;">不限项目数</span><br><span class="badge" style="vertical-align:middle;background:#3DEA62;">不限功能</span><br><span class="badge" style="vertical-align:middle;background:#FDB60D;">离线运转</span><br><span class="badge" style="vertical-align:middle;background:#21D789;">安全</span><br></p><h2 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用" aria-hidden="true">#</a> 如何使用</h2><p>基于原理，所以当我们需要共享或者拉取别人的配置或者API时，假设我们利用Git作为我们的版本控制系统，我们只需要<strong>push</strong>即可共享配置和API数据，<strong>pull</strong>即可获取别人提交的配置和API数据。</p><h3 id="更新配置" tabindex="-1"><a class="header-anchor" href="#更新配置" aria-hidden="true">#</a> 更新配置</h3><p>版本控制系统pull后，例如<code>Git pull</code>，点击刷新项目配置按钮，即可获取其他成员提交的配置</p><p><img src="'+p+'" alt="refreshProjectConfig" loading="lazy"></p><h2 id="更新api" tabindex="-1"><a class="header-anchor" href="#更新api" aria-hidden="true">#</a> 更新API</h2><p>版本控制系统pull后，例如<code>Git pull</code>，点击API刷新按钮，即可获取其他成员提交的API</p><p><img src="'+g+'" alt="refreshProjectConfig" loading="lazy"></p><h2 id="本地文件存储结构" tabindex="-1"><a class="header-anchor" href="#本地文件存储结构" aria-hidden="true">#</a> 本地文件存储结构</h2><p>插件会默认在项目根目录下创建一个 <strong>.fastRequest</strong> 的目录，API存储在 <strong>collections</strong> 目录下，配置存储在 <strong>config</strong> 目录下，API按照 <code>模块-&gt;类名-&gt;API</code> 的结构进行存储，每一个目录下存放一个 <strong>directory.json</strong> 文件，用于标识该目录。 其他API用方法的<strong>方法名.rapi</strong>进行存储，该文件可能会在版本控制系统中因为多方修改产生冲突，最终需要用户解决冲突，并满足标准的json以及数据结构。</p><p><img src="'+f+'" alt="teamDirectory" loading="lazy"></p><h2 id="历史数据转移" tabindex="-1"><a class="header-anchor" href="#历史数据转移" aria-hidden="true">#</a> 历史数据转移</h2><p>插件默认会进行一次历史数据转移，数据转移的时候(版本&lt;=2023.1.3的数据)，如果你的数据在<strong>版本管理系统</strong>上未提交，则不需要关心历史数据。 如果版本管理系统其他人已提交API，则会进行覆盖。 注意如果想看API历史数据，可以结合<strong>版本控制系统</strong>的文件<strong>历史记录</strong>来还原，也可以结合<strong>本地文件历史记录</strong>来还原。</p><p>如果发现数据未转移，也可手动操作！</p><p><img src="'+h+'" alt="transferData" loading="lazy"></p><h2 id="文件权限" tabindex="-1"><a class="header-anchor" href="#文件权限" aria-hidden="true">#</a> 文件权限</h2><p>如果发现因为<code>Permission denied</code>导致的错误，执行以下指令</p>',21),I=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token builtin class-name"},"cd"),e(),a("span",{class:"token punctuation"},"["),e("current project root dir"),a("span",{class:"token punctuation"},"]"),e(`
`),a("span",{class:"token function"},"chmod"),e(),a("span",{class:"token parameter variable"},"-R"),e(),a("span",{class:"token number"},"777"),e(` .fastRequest/*
`)])])],-1),y=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token builtin class-name"},"cd"),e(),a("span",{class:"token punctuation"},"["),e("current project root dir"),a("span",{class:"token punctuation"},"]"),e(`
takeown /f /r /d n .fastRequest/*
`)])])],-1);function D(q,B){const r=t("Badge"),o=t("SiteInfo"),i=t("CodeTabs");return b(),m("div",null,[a("p",null,[e("版本要求: "),s(r,{text:"2023.1.3"})]),v,A,x,s(o,{name:"Restful Fast Request",desc:"为简化调试API而生",url:"https://dromara.gitee.io/fast-request/",logo:"/fast-request/img/logo/logo.svg",preview:"/img/logo/homepage.png"}),P,s(i,{id:"76",data:[{title:"Linux"},{title:"Windows"}],"tab-id":"shell"},{tab0:n(({title:l,value:d,isActive:c})=>[I]),tab1:n(({title:l,value:d,isActive:c})=>[y]),_:1})])}const j=u(k,[["render",D],["__file","teamwork.html.vue"]]);export{j as default};
