import{_ as c,a as d,b as p}from"./searchEveryWhereError-2502625a.js";import{_ as u}from"./apiPreview-ecdba9b9.js";import{_ as h,X as g,Y as _,Z as e,$ as s,a0 as a,a1 as n,a2 as l,B as i}from"./framework-e053119e.js";const k="/fast-request/img/skill/urlError.png",f={},x=e("p",null,"关键字含义",-1),m=e("hr",null,null,-1),v=e("p",null,"我们将持续更新开发者遇到的问题以及解决方案",-1),b={class:"table-of-contents"},y=e("h2",{id:"s-快捷添加域名",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#s-快捷添加域名","aria-hidden":"true"},"#"),a(" S: 快捷添加域名")],-1),q=e("svg",{class:"icon svg-icon","aria-hidden":"true"},[e("use",{"xlink:href":"#icon-domainConfig"})],-1),S=e("strong",null,"2023.1.1",-1),A=l('<h2 id="s-apis丢失" tabindex="-1"><a class="header-anchor" href="#s-apis丢失" aria-hidden="true">#</a> S: APIs丢失</h2><p>非常抱歉，安装过2023.1.3版本的(已隐藏)会导致历史apis丢失，此时需要手动找回数据。<mark>请不要回退插件版本</mark></p><ol start="0"><li>下载插件版本&gt;=2023.1.3.2+的版本</li><li>找到项目下的.idea目录，右键并点击Local history(本地历史记录)，找到关于<code>.idea/FastRequestCollection.xml</code>的变更日志(标题包含了Deleting)，找到最后一个版本，把其中的内容拷贝到<code>.idea/fastRequest/fastRequestCollection.xml</code>中，</li><li>重启idea</li><li>在APIs tab下点击图标<svg class="icon svg-icon" aria-hidden="true"><use xlink:href="#icon-dataTransfer"></use></svg>并确认数据转移</li></ol><p><img src="'+c+'" alt="dataTransfer20231" loading="lazy"></p><h2 id="s-url-错误" tabindex="-1"><a class="header-anchor" href="#s-url-错误" aria-hidden="true">#</a> S: Url 错误</h2><p><img src="'+k+'" alt="urlError" loading="lazy"></p>',6),w=l(`<ol><li>配置正确的域名，并启用项目和环境2个下拉框</li><li>设置正确的url，例如需要将url上的变量{id}替换，可以在Path Param tab中替换变量</li></ol><h2 id="s-解析如何忽略某个字段" tabindex="-1"><a class="header-anchor" href="#s-解析如何忽略某个字段" aria-hidden="true">#</a> S: 解析如何忽略某个字段</h2><p>方式1： 使用如下2种注解中的一种</p><div class="language-text" data-ext="text"><pre class="language-text"><code>com.fasterxml.jackson.annotation.JsonIgnore

com.alibaba.fastjson.annotation.JSONField(serialize = false)
</code></pre></div><p>方式2： 给字段增加 <code>static</code> 修饰符</p><p>方式3：注释上加@parseIgnore</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * xxx description
 * <span class="token keyword">@parseIgnore</span>
 */</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> someIgnoreField <span class="token punctuation">;</span>
</code></pre></div><h2 id="s-快速定位" tabindex="-1"><a class="header-anchor" href="#s-快速定位" aria-hidden="true">#</a> S: 快速定位</h2><p>获取到窗口或者弹出框焦点以后，输入需要搜索的字母，快读定位，然后使用<code>↑</code>箭头或者<code>↓</code>箭头进行跳跃定位</p><p>例如:</p><p><img src="`+u+'" alt="apiDocExample" loading="lazy"></p><h2 id="s-多文件上传" tabindex="-1"><a class="header-anchor" href="#s-多文件上传" aria-hidden="true">#</a> S: 多文件上传</h2><p>输入多个值并将字段类型设置为 file</p><p><img src="'+d+'" alt="multiFileUpload" loading="lazy"></p><h2 id="s-body-中想直接传-text" tabindex="-1"><a class="header-anchor" href="#s-body-中想直接传-text" aria-hidden="true">#</a> S: Body 中想直接传 text</h2><p>在 header 中加入<strong>Content-Type: text/plain</strong></p>',16),I=e("h2",{id:"s-没有-controller-如何发送请求",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#s-没有-controller-如何发送请求","aria-hidden":"true"},"#"),a(" S: 没有 Controller，如何发送请求")],-1),B=l(`<h2 id="s-写脚本时得到提示" tabindex="-1"><a class="header-anchor" href="#s-写脚本时得到提示" aria-hidden="true">#</a> S: 写脚本时得到提示</h2><p>复制一下代码，完成脚本编辑后删除</p><div class="language-text" data-ext="text"><pre class="language-text"><code>import cn.hutool.http.HttpUtil

def request = HttpUtil.createGet(&quot;shouldremove&quot;)
def response = request.execute()
</code></pre></div><h2 id="s-api文档同步" tabindex="-1"><a class="header-anchor" href="#s-api文档同步" aria-hidden="true">#</a> S: API文档同步</h2><p>当你修改了你的接口参数，从APIs列表双击回来的api是你未更新前保存的API，此时你想保证在线API文档是你修改后的， 需要再点一下 <svg class="icon svg-icon" aria-hidden="true"><use xlink:href="#icon-saveNew"></use></svg>(保存) 或者左侧图标 <svg class="icon svg-icon" aria-hidden="true"><use xlink:href="#icon-restfulFastRequest"></use></svg> ,再进行同步。</p><p>建议：不需要提前在Github、Gitee、Gitlab创建仓库，插件自动会帮助创建，开发者只需要提供仓库名就行</p><h2 id="s-apis回显" tabindex="-1"><a class="header-anchor" href="#s-apis回显" aria-hidden="true">#</a> S: APIs回显</h2>`,7),P=e("svg",{class:"icon svg-icon","aria-hidden":"true"},[e("use",{"xlink:href":"#icon-regenerate"})],-1),Q=l('<blockquote><p>请确保你每次修改参数后点击<code>保存</code><svg class="icon svg-icon" aria-hidden="true"><use xlink:href="#icon-saveNew"></use></svg>按钮</p></blockquote><h1 id="s-最佳视觉效果" tabindex="-1"><a class="header-anchor" href="#s-最佳视觉效果" aria-hidden="true">#</a> S: 最佳视觉效果</h1><p>调整工具窗口宽度至<code>610</code>+像素，达到最佳视觉效果</p><h2 id="q-生成参数、跳转错乱" tabindex="-1"><a class="header-anchor" href="#q-生成参数、跳转错乱" aria-hidden="true">#</a> Q: 生成参数、跳转错乱</h2><p><strong>A:</strong> controller代码里面不要出现方法名一样的方法</p><h2 id="q-新ui下searcheverywhere中tab无法显示" tabindex="-1"><a class="header-anchor" href="#q-新ui下searcheverywhere中tab无法显示" aria-hidden="true">#</a> Q: 新UI下SearchEveryWhere中Tab无法显示</h2><p><strong>A:</strong> 暂时先把IDEA的主题换成<code>Dark</code>，操作步骤：<code>打开SearchEveryWhere-&gt;输入theme-&gt;回车或者确定切换主题至Dark</code>，这是IDEA主题导致的bug。</p><p><img src="'+p+'" alt="" loading="lazy"></p><h2 id="q-左侧图标不显示" tabindex="-1"><a class="header-anchor" href="#q-左侧图标不显示" aria-hidden="true">#</a> Q: 左侧图标不显示</h2><p>左侧图标<svg class="icon svg-icon" aria-hidden="true"><use xlink:href="#icon-restfulFastRequest"></use></svg>不显示。</p><p><strong>A:</strong> 打开配置 <code>setting-&gt;Editor-&gt;Gutter icons-&gt;show gutter icon</code></p><p><strong>B:</strong> 检查是否安装了forestx插件，该插件目前会引起Fast Request插件图标不展示</p><h2 id="q-输入参数后调用-api-发现无效" tabindex="-1"><a class="header-anchor" href="#q-输入参数后调用-api-发现无效" aria-hidden="true">#</a> Q: 输入参数后调用 API 发现无效</h2><p><strong>A:</strong> 插件版本小于2022.2.3的在 table 控件编辑某个值的时候，需要在编辑完值后<mark>先在空白处点一下</mark>，再发送请求，该问题在 2022.2.3+版本得到修复</p><h2 id="q-为啥插件没反应" tabindex="-1"><a class="header-anchor" href="#q-为啥插件没反应" aria-hidden="true">#</a> Q: 为啥插件没反应</h2>',15),j=e("strong",null,"A:",-1),E=l(`<h2 id="q-点击图标后-idea-卡死" tabindex="-1"><a class="header-anchor" href="#q-点击图标后-idea-卡死" aria-hidden="true">#</a> Q: 点击图标后 idea 卡死</h2><p><strong>A:</strong> 你设计的实体类嵌套递归，插件不支持，比如说 A 实体类有 B 实体类的属性，B 实体类有 A 实体类的属性</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">B</span> b<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> xx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">A</span> a<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> xx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>以上这种情况如果你不需要 B 属性，那么你可以在生成的时候手动给 B 加一个 static 属性</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">B</span> b<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> xx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,5);function C(F,R){const r=i("Badge"),t=i("router-link"),o=i("RouterLink");return g(),_("div",null,[e("blockquote",null,[x,s(r,{text:"S: 技巧",color:"#087CFA"}),a(),s(r,{text:"Q: 问题",color:"#FE2857"}),a(),s(r,{text:"A: 答案",color:"#21D789"}),a(),m,v]),e("nav",b,[e("ul",null,[e("li",null,[s(t,{to:"#s-快捷添加域名"},{default:n(()=>[a("S: 快捷添加域名")]),_:1})]),e("li",null,[s(t,{to:"#s-apis丢失"},{default:n(()=>[a("S: APIs丢失")]),_:1})]),e("li",null,[s(t,{to:"#s-url-错误"},{default:n(()=>[a("S: Url 错误")]),_:1})]),e("li",null,[s(t,{to:"#s-解析如何忽略某个字段"},{default:n(()=>[a("S: 解析如何忽略某个字段")]),_:1})]),e("li",null,[s(t,{to:"#s-快速定位"},{default:n(()=>[a("S: 快速定位")]),_:1})]),e("li",null,[s(t,{to:"#s-多文件上传"},{default:n(()=>[a("S: 多文件上传")]),_:1})]),e("li",null,[s(t,{to:"#s-body-中想直接传-text"},{default:n(()=>[a("S: Body 中想直接传 text")]),_:1})]),e("li",null,[s(t,{to:"#s-没有-controller-如何发送请求"},{default:n(()=>[a("S: 没有 Controller，如何发送请求")]),_:1})]),e("li",null,[s(t,{to:"#s-写脚本时得到提示"},{default:n(()=>[a("S: 写脚本时得到提示")]),_:1})]),e("li",null,[s(t,{to:"#s-api文档同步"},{default:n(()=>[a("S: API文档同步")]),_:1})]),e("li",null,[s(t,{to:"#s-apis回显"},{default:n(()=>[a("S: APIs回显")]),_:1})]),e("li",null,[s(t,{to:"#q-生成参数、跳转错乱"},{default:n(()=>[a("Q: 生成参数、跳转错乱")]),_:1})]),e("li",null,[s(t,{to:"#q-新ui下searcheverywhere中tab无法显示"},{default:n(()=>[a("Q: 新UI下SearchEveryWhere中Tab无法显示")]),_:1})]),e("li",null,[s(t,{to:"#q-左侧图标不显示"},{default:n(()=>[a("Q: 左侧图标不显示")]),_:1})]),e("li",null,[s(t,{to:"#q-输入参数后调用-api-发现无效"},{default:n(()=>[a("Q: 输入参数后调用 API 发现无效")]),_:1})]),e("li",null,[s(t,{to:"#q-为啥插件没反应"},{default:n(()=>[a("Q: 为啥插件没反应")]),_:1})]),e("li",null,[s(t,{to:"#q-点击图标后-idea-卡死"},{default:n(()=>[a("Q: 点击图标后 idea 卡死")]),_:1})])])]),y,e("p",null,[a("请参考 "),s(o,{to:"/guide/features/projectLevelDomainConfig.html"},{default:n(()=>[q,a(" 项目级别域名配置")]),_:1}),a(" (插件版本>="),S,a(")")]),A,s(r,{text:"解决办法",type:"tip"}),w,e("p",null,[a("考虑使用"),s(o,{to:"/guide/features/commonHeader.html"},{default:n(()=>[a("常用头参数")]),_:1}),a("快速添加")]),I,e("p",null,[a("参考"),s(o,{to:"/guide/features/tempRequest.html"},{default:n(()=>[a("临时请求")]),_:1})]),B,e("p",null,[a("针对保存后的api，又进行了修改，那么你需要手动补参数并保存。如果你完全不想要之前的参数了，直接点击"),P,a("("),s(o,{to:"/guide/features/regenerate.html"},{default:n(()=>[a("重新生成")]),_:1}),a(")")]),Q,e("p",null,[j,a(" 请先完善配置，参考"),s(o,{to:"/guide/getstarted/start.html"},{default:n(()=>[a("快速开始")]),_:1}),a("，再点击图标")]),E])}const z=h(f,[["render",C],["__file","faq.html.vue"]]);export{z as default};
