import{_ as c,a as s}from"./projectLevelDomainDialog-225b1835.js";import{_ as l,X as r,Y as d,Z as e,a0 as t,$ as o,a1 as p,a2 as _,B as i}from"./framework-e053119e.js";const h={},u=e("h1",{id:"project级别域名配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#project级别域名配置","aria-hidden":"true"},"#"),t(" Project级别域名配置")],-1),m=e("p",null,"作用：本功能可以让开发者一键添加域名配置",-1),g={class:"hint-container danger"},f=e("p",{class:"hint-container-title"},"建议",-1),v=e("svg",{class:"icon svg-icon","aria-hidden":"true"},[e("use",{"xlink:href":"#icon-tool"})],-1),x=e("p",null,"使用项目级别配置的好处是当项目多的时候，下拉框选项将减少（排除了其他项目的配置)，只取本项目级别域名与全局域名配置的交集。",-1),j=_('<p>使用：选择项目中的<code>application.properties</code>或者<code>application.yml</code>，通过配置文件，点击图标<svg class="icon svg-icon" aria-hidden="true"><use xlink:href="#icon-restfulFastRequest"></use></svg>，可以快捷添加配置。</p><p><img src="'+c+'" alt="projectLevelDomainConfig" title="域名配置" loading="lazy"></p><p><img src="'+s+'" alt="projectLevelDomainDialog" title="域名列表" loading="lazy"></p><div class="hint-container tip"><p class="hint-container-title">变量来源</p><ol><li>针对带有环境名如<code>application-dev.properties</code>，插件将自动适配<code>-</code>与<code>.</code>之间的变量作为环境名。</li><li>项目名来源于模块名</li><li>域名=<code>http://localhost:port/context-path</code></li></ol></div>',4);function k(B,L){const a=i("Badge"),n=i("RouterLink");return r(),d("div",null,[u,m,e("p",null,[t("版本要求: "),o(a,{text:"2023.1.1+"})]),e("div",g,[f,e("p",null,[t("建议使用项目级别域名配置，原来的"),o(n,{to:"/guide/features/settingManager.html"},{default:p(()=>[v,t(" 管理配置")]),_:1}),t("将作为全配置配置，并且优先级小于项目级别配置，建议项目域名以项目级别隔离而不要使用全局配置。")]),x]),j])}const N=l(h,[["render",k],["__file","projectLevelDomainConfig.html.vue"]]);export{N as default};
